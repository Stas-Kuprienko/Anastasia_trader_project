server:
  port: 8082

spring:
  application:
    name: core-service
  profiles:
    active:
      - local
  autoconfigure:
    exclude: net.devh.boot.grpc.server.autoconfigure.GrpcServerFactoryAutoConfiguration

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${project.variables.keycloak.url}/auth/realms/trade_project
  r2dbc:
    url: r2dbc:postgresql://${project.variables.datasource.url}/trade_project
    username: ${project.variables.datasource.username}
    password: ${project.variables.datasource.password}
  flyway:
    enabled: true
    url: jdbc:postgresql://${project.variables.datasource.url}/trade_project
    user: ${project.variables.datasource.username}
    password: ${project.variables.datasource.password}
  kafka:
    bootstrap-servers: ${project.variables.kafka.url}
    topic: transactions-topic
    partitions: 3
    replicas: 3
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  redis:
    host: ${project.variables.redis.host}
    port: ${project.variables.redis.port}

grpc:
  client:
    analytical-service:
      address: static://${project.variables.smart-service.url}
      enableKeepAlive: true
      negotiationType: "PLAINTEXT"
  server:
    port: -1


project:

  variables:
    keycloak:
      url: <?>
    datasource:
      url: <?>
      username: <?>
      password: <?>
    kafka:
      url: <?>
    smart-service:
      url: <?>
    redis:
      host: <?>
      port: <?>

  encryption:
    secret-key: <?>
    iv-value: <?>

  exchange:
    moex:
      url: https://iss.moex.com/iss
